//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asm.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


#pragma warning disable CS3021 // Type or member does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AsmParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IAsmListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsmParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] AsmParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsmParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] AsmParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StmtBlank</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtBlank([NotNull] AsmParser.StmtBlankContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StmtBlank</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtBlank([NotNull] AsmParser.StmtBlankContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StmtEqu</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtEqu([NotNull] AsmParser.StmtEquContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StmtEqu</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtEqu([NotNull] AsmParser.StmtEquContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StmtData</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtData([NotNull] AsmParser.StmtDataContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StmtData</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtData([NotNull] AsmParser.StmtDataContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StmtOpcode</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtOpcode([NotNull] AsmParser.StmtOpcodeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StmtOpcode</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtOpcode([NotNull] AsmParser.StmtOpcodeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StmtLabel</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtLabel([NotNull] AsmParser.StmtLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StmtLabel</c>
	/// labeled alternative in <see cref="AsmParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtLabel([NotNull] AsmParser.StmtLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArgumentExtendedOrDirect</c>
	/// labeled alternative in <see cref="AsmParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentExtendedOrDirect([NotNull] AsmParser.ArgumentExtendedOrDirectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArgumentExtendedOrDirect</c>
	/// labeled alternative in <see cref="AsmParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentExtendedOrDirect([NotNull] AsmParser.ArgumentExtendedOrDirectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArgumentImmediate</c>
	/// labeled alternative in <see cref="AsmParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentImmediate([NotNull] AsmParser.ArgumentImmediateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArgumentImmediate</c>
	/// labeled alternative in <see cref="AsmParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentImmediate([NotNull] AsmParser.ArgumentImmediateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DataByteList</c>
	/// labeled alternative in <see cref="AsmParser.data_byte_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataByteList([NotNull] AsmParser.DataByteListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DataByteList</c>
	/// labeled alternative in <see cref="AsmParser.data_byte_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataByteList([NotNull] AsmParser.DataByteListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DataByteExpr</c>
	/// labeled alternative in <see cref="AsmParser.data_byte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataByteExpr([NotNull] AsmParser.DataByteExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DataByteExpr</c>
	/// labeled alternative in <see cref="AsmParser.data_byte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataByteExpr([NotNull] AsmParser.DataByteExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DataByteString</c>
	/// labeled alternative in <see cref="AsmParser.data_byte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataByteString([NotNull] AsmParser.DataByteStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DataByteString</c>
	/// labeled alternative in <see cref="AsmParser.data_byte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataByteString([NotNull] AsmParser.DataByteStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DataWordList</c>
	/// labeled alternative in <see cref="AsmParser.data_word_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataWordList([NotNull] AsmParser.DataWordListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DataWordList</c>
	/// labeled alternative in <see cref="AsmParser.data_word_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataWordList([NotNull] AsmParser.DataWordListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprParens</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprParens([NotNull] AsmParser.ExprParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprParens</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprParens([NotNull] AsmParser.ExprParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprIdentifier</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprIdentifier([NotNull] AsmParser.ExprIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprIdentifier</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprIdentifier([NotNull] AsmParser.ExprIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprUnaryOp</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprUnaryOp([NotNull] AsmParser.ExprUnaryOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprUnaryOp</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprUnaryOp([NotNull] AsmParser.ExprUnaryOpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprBinOp</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprBinOp([NotNull] AsmParser.ExprBinOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprBinOp</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprBinOp([NotNull] AsmParser.ExprBinOpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprLiteral</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprLiteral([NotNull] AsmParser.ExprLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprLiteral</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprLiteral([NotNull] AsmParser.ExprLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralHex</c>
	/// labeled alternative in <see cref="AsmParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralHex([NotNull] AsmParser.LiteralHexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralHex</c>
	/// labeled alternative in <see cref="AsmParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralHex([NotNull] AsmParser.LiteralHexContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralDec</c>
	/// labeled alternative in <see cref="AsmParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralDec([NotNull] AsmParser.LiteralDecContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralDec</c>
	/// labeled alternative in <see cref="AsmParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralDec([NotNull] AsmParser.LiteralDecContext context);
}
